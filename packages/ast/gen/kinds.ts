import { namedTypes } from "./namedTypes";
export type PrintableKind = namedTypes.Printable;
export type SourceLocationKind = namedTypes.SourceLocation;
export type NodeKind = namedTypes.Node;
export type BaseNodeKind = namedTypes.BaseNode;
export type PositionKind = namedTypes.Position;
export type StmtKind = namedTypes.Stmt;
export type HelperKind = namedTypes.Helper;
export type ExprKind = namedTypes.Expr;
export type TemplateKind = namedTypes.Template;
export type OutputKind = namedTypes.Output;
export type ExtendsKind = namedTypes.Extends;
export type ForKind = namedTypes.For;
export type IfKind = namedTypes.If;
export type MacroKind = namedTypes.Macro;
export type NameKind = namedTypes.Name;
export type CallBlockKind = namedTypes.CallBlock;
export type CallKind = namedTypes.Call;
export type FilterBlockKind = namedTypes.FilterBlock;
export type FilterTestBaseKind = namedTypes.FilterTestBase;
export type FilterKind = namedTypes.Filter;
export type WithKind = namedTypes.With;
export type BlockKind = namedTypes.Block;
export type IncludeKind = namedTypes.Include;
export type FromImportKind = namedTypes.FromImport;
export type ExprStmtKind = namedTypes.ExprStmt;
export type AssignKind = namedTypes.Assign;
export type AssignBlockKind = namedTypes.AssignBlock;
export type BinExprKind = namedTypes.BinExpr;
export type UnaryExprKind = namedTypes.UnaryExpr;
export type NSRefKind = namedTypes.NSRef;
export type LiteralKind = namedTypes.Literal;
export type ConstKind = namedTypes.Const;
export type TemplateDataKind = namedTypes.TemplateData;
export type TupleKind = namedTypes.Tuple;
export type ListKind = namedTypes.List;
export type DictKind = namedTypes.Dict;
export type PairKind = namedTypes.Pair;
export type KeywordKind = namedTypes.Keyword;
export type CondExprKind = namedTypes.CondExpr;
export type TestKind = namedTypes.Test;
export type GetitemKind = namedTypes.Getitem;
export type GetattrKind = namedTypes.Getattr;
export type SliceKind = namedTypes.Slice;
export type ConcatKind = namedTypes.Concat;
export type CompareKind = namedTypes.Compare;
export type OperandKind = namedTypes.Operand;
export type MulKind = namedTypes.Mul;
export type DivKind = namedTypes.Div;
export type FloorDivKind = namedTypes.FloorDiv;
export type AddKind = namedTypes.Add;
export type SubKind = namedTypes.Sub;
export type ModKind = namedTypes.Mod;
export type PowKind = namedTypes.Pow;
export type AndKind = namedTypes.And;
export type OrKind = namedTypes.Or;
export type NotKind = namedTypes.Not;
export type NegKind = namedTypes.Neg;
export type PosKind = namedTypes.Pos;
export type EnvironmentAttributeKind = namedTypes.EnvironmentAttribute;
export type ExtensionAttributeKind = namedTypes.ExtensionAttribute;
export type ImportedNameKind = namedTypes.ImportedName;
export type InternalNameKind = namedTypes.InternalName;
export type MarkSafeKind = namedTypes.MarkSafe;
export type MarkSafeIfAutoescapeKind = namedTypes.MarkSafeIfAutoescape;
export type ContextReferenceKind = namedTypes.ContextReference;
export type DerivedContextReferenceKind = namedTypes.DerivedContextReference;
export type ContinueKind = namedTypes.Continue;
export type BreakKind = namedTypes.Break;
export type ScopeKind = namedTypes.Scope;
export type OverlayScopeKind = namedTypes.OverlayScope;
export type EvalContextModifierKind = namedTypes.EvalContextModifier;
export type ScopedEvalContextModifierKind =
  namedTypes.ScopedEvalContextModifier;
